// Generated by AI. Original prompt: Write comprehensive system tests for PropertyManager.cs
using NUnit.Framework;
using UnityEngine;
using UnityEngine.TestTools;
using System.Collections;
using PropertyTycoon;

public class PropertyManagerSystemTests
{
    private GameObject gameObject;
    private PropertyManager propertyManager;

    [UnitySetUp]
    public IEnumerator SetUp()
    {
        gameObject = new GameObject();
        propertyManager = gameObject.AddComponent<PropertyManager>();
        yield return null; // Allow Awake() to be called naturally
    }

    [TearDown]
    public void TearDown()
    {
        Object.DestroyImmediate(gameObject);
    }

    // System Test: Verify properties are initialized during Awake()
    [Test]
    public void Test_Awake_InitializesProperties()
    {
        Assert.AreEqual(22, propertyManager.properties.Count);
    }

    // System Test: Verify tile-based property retrieval works after initialization
    [Test]
    public void Test_GetTileProperty_AfterInitialization()
    {
        Property prop = propertyManager.getTileProperty(40);
        Assert.IsNotNull(prop);
        Assert.AreEqual("Turing Heights", prop.name);
        Assert.AreEqual(400, prop.price);
    }

    // System Test: Verify last property has correct attributes
    [Test]
    public void Test_LastPropertyDetailsCorrect()
    {
        Property lastProp = propertyManager.properties[21];
        Assert.AreEqual("Turing Heights", lastProp.name);
        Assert.AreEqual(400, lastProp.price);
        Assert.AreEqual("DBlue", lastProp.colour);
        Assert.AreEqual(40, lastProp.tileno);
    }
}